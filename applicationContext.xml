<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"  
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"  
       xsi:schemaLocation="http://www.springframework.org/schema/beans  
           http://www.springframework.org/schema/beans/spring-beans.xsd">
<!-- <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
   <property name="driverClassName">
    <value>com.mysql.jdbc.Driver</value>
   </property>
   <property name="url">
    <value>jdbc:mysql://localhost:3306/login_and_regedit</value>
   </property>
   <property name="username">
    <value>root</value>
   </property>
   <property name="password">
    <value>141203121</value>
   </property>
 </bean>
 <bean id="userDao" class="li.UserDaoImp">
  <property name="dataSource">
   <ref bean="dataSource"/>
  </property>
 </bean>  -->
 <!-- 编程式事务管理start -->
 <!-- <bean id="transactionTemplate" class="org.springframework.transaction.support.TransactionTemplate">
   <property name="transactionManager">
     <ref bean="transactionManager"/>
   </property>
   <property name="propagationBehaviorName">
     <value>PROPAGATION_REQUIRED</value>
   </property>
  </bean>
  <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
   <property name="dataSource">
    <ref bean="dataSource"></ref>
   </property>
  </bean>
  <bean id="transactionExample" class="li.TransactionExample">
   <property name="dataSource">
    <ref bean="dataSource"></ref>
   </property>
   <property name="transactionManager">
     <ref bean="transactionManager"></ref>
   </property>
   <property name="transactionTemplate">
     <ref bean="transactionTemplate"></ref>
   </property> 
  </bean> -->
  <!-- 编程式事务管理end -->
  
  <!-- 声明式事务管理start -->
  <!-- <bean id="transactionProxy" class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
    <property name="transactionManager">
      <ref bean="transactionManager"></ref>
    </property>
    <property name="target">
     <bean id="addDao" class="li.AddDao">
       <property name="dataSource">
        <ref bean="dataSource"/> 不能用local属性，只能用bean？ 
       </property>
     </bean>
    </property>
    <property name="proxyTargetClass" value="true"/>
    <property name="transactionAttributes">
      <props>
        <prop key="add*">PROPAGATION_REQUIRED</prop>
      </props>
    </property>
  </bean>-->
  <!-- 声明式事务管理end -->
  
  <!-- 基础bean测试 start -->
  <!-- <bean id="user" class="li.User">-->
   <!-- 注入的顺序必须和构造器的顺序相同 -->
   <!--  <constructor-arg index="2" type="java.lang.String">
      <value>141</value>
    </constructor-arg>
    <constructor-arg index="1" type="java.lang.String">
      <value>li</value>
    </constructor-arg>
    <constructor-arg index="0" type="java.lang.Integer">
     <value>1</value>
    </constructor-arg>
  </bean> -->
  <!-- 基础bean测试 end -->
  
  <!-- JdbcTemplate操作数据库 start-->
 <!--  <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
   <property name="dataSource">
    <ref bean="dataSource"/>
   </property>
  </bean> -->
  <!-- JdbcTemplate操作数据可 end -->
  
  <!-- AOP start -->
  <!-- 基于ProxyFactory的Aop实现 start -->
  <!-- <bean id="userBiz" class="aop.UserBizImp">
   <property name="userDao" ref="userDao"></property>
  </bean>
  <bean id="logAroundAdvice" class="aop.LogAroundAdvice"/>
  <bean id="throwsLoginAdvice" class="aop.ThrowsLoginAdvice"></bean>
  <bean id="afterLoginAdvice" class="aop.AfterLoginAdvice"></bean>
  <bean id="logAdvice" class="aop.LogAdvice"></bean>
  <bean id="userDao" class="aop.UserDaoImp"></bean>
  <bean id="ub" class="org.springframework.aop.framework.ProxyFactoryBean">
   <property name="proxyInterfaces">
    <value>aop.UserBiz</value>
   </property>
   <property name="interceptorNames">
    <list>
     <value>logAdvice</value>
     <value>afterLoginAdvice</value>
     <value>throwsLoginAdvice</value>
     <value>logAroundAdvice</value>
    </list>
   </property>
   <property name="target" ref="userBiz"></property>
  </bean>  -->
  <!-- 基于ProxyFactory的AOP实现 end -->
  <!-- 采用AOP配置方式的AOP实现 start -->
  <!-- aop.xml -->
  <!-- 采用AOP配置方式的AOP实现 end -->
  <!-- AOP end -->
</beans>